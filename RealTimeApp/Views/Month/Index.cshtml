@model IEnumerable<RealTimeApp.Models.Month>

@{
    ViewBag.Title = "Index";
}



<h2>Index GET api/Time</h2>



	<script type="text/javascript">
	    var output = "";

	    var dataOut = [];
	    $(function () {





	        $.ajax({
	            contentType: 'application/json; charset=utf-8',
	            data: '',
	            url: "http://localhost:3908/api/Time",
	            type: "GET",
	            crossDomain: true,
	            headers: { 'X-Requested-With': 'XMLHttpRequest' },
	            success: function (data) {
	      

	                $.each(data, function (index, item) {

	                    var x = [item.Name, item.Number];
                        
	                    dataOut.push(x);

	                   

	                });
	           //     $('#json-my-response').html(output);





	              

	                $.plot("#placeholder", [dataOut], {
	                    series: {
	                        bars: {
	                            show: true,
	                            barWidth: 0.6,
	                            align: "center"
	                        }
	                    },
	                    xaxis: {
	                        mode: "categories",
	                        tickLength: 0
	                    }
	                });

	                // Add the Flot version string to the footer

	                $("#footer").prepend("Flot " + $.plot.version + " &ndash; ");












	            }

	        });//end of ajax request




	});

	</script>



		<div class="demo-container">
			<div id="placeholder" class="demo-placeholder"></div>
		</div>


<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Number)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Number)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
